// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: cryptovotepb/go_grpc_cryptovote.proto

package cryptovotepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EmptyReq é usada para invocar metodos/func rpc sem parametros (in/out)
type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{0}
}

// CryptoVote é usada para invocar metodos/func que usa dados CryptoVote como parametro (in/ou)
// Além dos tipos básico (int32 e string) possui uma message do tipo CryptoVote, acessível pelo campo crypto
type CryptoVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol      string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	QtdUpvote   int32  `protobuf:"varint,3,opt,name=qtd_upvote,json=qtdUpvote,proto3" json:"qtd_upvote,omitempty"`
	QtdDownvote int32  `protobuf:"varint,4,opt,name=qtd_downvote,json=qtdDownvote,proto3" json:"qtd_downvote,omitempty"`
}

func (x *CryptoVote) Reset() {
	*x = CryptoVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoVote) ProtoMessage() {}

func (x *CryptoVote) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoVote.ProtoReflect.Descriptor instead.
func (*CryptoVote) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{1}
}

func (x *CryptoVote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CryptoVote) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CryptoVote) GetQtdUpvote() int32 {
	if x != nil {
		return x.QtdUpvote
	}
	return 0
}

func (x *CryptoVote) GetQtdDownvote() int32 {
	if x != nil {
		return x.QtdDownvote
	}
	return 0
}

type CreateCryptoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crypto *CryptoVote `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *CreateCryptoReq) Reset() {
	*x = CreateCryptoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCryptoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCryptoReq) ProtoMessage() {}

func (x *CreateCryptoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCryptoReq.ProtoReflect.Descriptor instead.
func (*CreateCryptoReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCryptoReq) GetCrypto() *CryptoVote {
	if x != nil {
		return x.Crypto
	}
	return nil
}

type RetrieveCryptoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *CryptoVote `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *RetrieveCryptoReq) Reset() {
	*x = RetrieveCryptoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCryptoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCryptoReq) ProtoMessage() {}

func (x *RetrieveCryptoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCryptoReq.ProtoReflect.Descriptor instead.
func (*RetrieveCryptoReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveCryptoReq) GetFilter() *CryptoVote {
	if x != nil {
		return x.Filter
	}
	return nil
}

type UpdateCryptoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *CryptoVote `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	NewName   string      `protobuf:"bytes,2,opt,name=newName,proto3" json:"newName,omitempty"`
	NewSymbol string      `protobuf:"bytes,3,opt,name=newSymbol,proto3" json:"newSymbol,omitempty"`
}

func (x *UpdateCryptoReq) Reset() {
	*x = UpdateCryptoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCryptoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCryptoReq) ProtoMessage() {}

func (x *UpdateCryptoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCryptoReq.ProtoReflect.Descriptor instead.
func (*UpdateCryptoReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCryptoReq) GetFilter() *CryptoVote {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateCryptoReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *UpdateCryptoReq) GetNewSymbol() string {
	if x != nil {
		return x.NewSymbol
	}
	return ""
}

type AddVoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *AddVoteReq) Reset() {
	*x = AddVoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoteReq) ProtoMessage() {}

func (x *AddVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVoteReq.ProtoReflect.Descriptor instead.
func (*AddVoteReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{5}
}

func (x *AddVoteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddVoteReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type TotalChangesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qtd int32 `protobuf:"varint,1,opt,name=qtd,proto3" json:"qtd,omitempty"`
}

func (x *TotalChangesRes) Reset() {
	*x = TotalChangesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalChangesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalChangesRes) ProtoMessage() {}

func (x *TotalChangesRes) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalChangesRes.ProtoReflect.Descriptor instead.
func (*TotalChangesRes) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{6}
}

func (x *TotalChangesRes) GetQtd() int32 {
	if x != nil {
		return x.Qtd
	}
	return 0
}

type DeleteCryptoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *CryptoVote `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DeleteCryptoReq) Reset() {
	*x = DeleteCryptoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCryptoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCryptoReq) ProtoMessage() {}

func (x *DeleteCryptoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCryptoReq.ProtoReflect.Descriptor instead.
func (*DeleteCryptoReq) Descriptor() ([]byte, []int) {
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCryptoReq) GetFilter() *CryptoVote {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_cryptovotepb_go_grpc_cryptovote_proto protoreflect.FileDescriptor

var file_cryptovotepb_go_grpc_cryptovote_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2f, 0x67,
	0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76,
	0x6f, 0x74, 0x65, 0x70, 0x62, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x22, 0x7a, 0x0a, 0x0a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x71,
	0x74, 0x64, 0x5f, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x71, 0x74, 0x64, 0x55, 0x70, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x74,
	0x64, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x71, 0x74, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x43, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x30, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x22, 0x45, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x38, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x23, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x71, 0x74, 0x64, 0x22, 0x43, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0x97, 0x04, 0x0a, 0x11, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x56, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74,
	0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65,
	0x70, 0x62, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f,
	0x74, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76,
	0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e,
	0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70,
	0x62, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x55, 0x70, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74,
	0x65, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x6c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74,
	0x65, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65,
	0x70, 0x62, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x69, 0x6f, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x67, 0x61, 0x2f, 0x67,
	0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74,
	0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cryptovotepb_go_grpc_cryptovote_proto_rawDescOnce sync.Once
	file_cryptovotepb_go_grpc_cryptovote_proto_rawDescData = file_cryptovotepb_go_grpc_cryptovote_proto_rawDesc
)

func file_cryptovotepb_go_grpc_cryptovote_proto_rawDescGZIP() []byte {
	file_cryptovotepb_go_grpc_cryptovote_proto_rawDescOnce.Do(func() {
		file_cryptovotepb_go_grpc_cryptovote_proto_rawDescData = protoimpl.X.CompressGZIP(file_cryptovotepb_go_grpc_cryptovote_proto_rawDescData)
	})
	return file_cryptovotepb_go_grpc_cryptovote_proto_rawDescData
}

var file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cryptovotepb_go_grpc_cryptovote_proto_goTypes = []interface{}{
	(*EmptyReq)(nil),          // 0: cryptovotepb.EmptyReq
	(*CryptoVote)(nil),        // 1: cryptovotepb.CryptoVote
	(*CreateCryptoReq)(nil),   // 2: cryptovotepb.CreateCryptoReq
	(*RetrieveCryptoReq)(nil), // 3: cryptovotepb.RetrieveCryptoReq
	(*UpdateCryptoReq)(nil),   // 4: cryptovotepb.UpdateCryptoReq
	(*AddVoteReq)(nil),        // 5: cryptovotepb.AddVoteReq
	(*TotalChangesRes)(nil),   // 6: cryptovotepb.TotalChangesRes
	(*DeleteCryptoReq)(nil),   // 7: cryptovotepb.DeleteCryptoReq
}
var file_cryptovotepb_go_grpc_cryptovote_proto_depIdxs = []int32{
	1,  // 0: cryptovotepb.CreateCryptoReq.crypto:type_name -> cryptovotepb.CryptoVote
	1,  // 1: cryptovotepb.RetrieveCryptoReq.filter:type_name -> cryptovotepb.CryptoVote
	1,  // 2: cryptovotepb.UpdateCryptoReq.filter:type_name -> cryptovotepb.CryptoVote
	1,  // 3: cryptovotepb.DeleteCryptoReq.filter:type_name -> cryptovotepb.CryptoVote
	2,  // 4: cryptovotepb.CryptoVoteService.CreateCryptoVote:input_type -> cryptovotepb.CreateCryptoReq
	3,  // 5: cryptovotepb.CryptoVoteService.RetrieveAllCryptoVoteByFilter:input_type -> cryptovotepb.RetrieveCryptoReq
	4,  // 6: cryptovotepb.CryptoVoteService.UpdateOneCryptoVoteByFilter:input_type -> cryptovotepb.UpdateCryptoReq
	5,  // 7: cryptovotepb.CryptoVoteService.AddUpVote:input_type -> cryptovotepb.AddVoteReq
	5,  // 8: cryptovotepb.CryptoVoteService.AddDownVote:input_type -> cryptovotepb.AddVoteReq
	7,  // 9: cryptovotepb.CryptoVoteService.DeleteAllCryptoVoteByFilter:input_type -> cryptovotepb.DeleteCryptoReq
	6,  // 10: cryptovotepb.CryptoVoteService.CreateCryptoVote:output_type -> cryptovotepb.TotalChangesRes
	1,  // 11: cryptovotepb.CryptoVoteService.RetrieveAllCryptoVoteByFilter:output_type -> cryptovotepb.CryptoVote
	6,  // 12: cryptovotepb.CryptoVoteService.UpdateOneCryptoVoteByFilter:output_type -> cryptovotepb.TotalChangesRes
	6,  // 13: cryptovotepb.CryptoVoteService.AddUpVote:output_type -> cryptovotepb.TotalChangesRes
	6,  // 14: cryptovotepb.CryptoVoteService.AddDownVote:output_type -> cryptovotepb.TotalChangesRes
	6,  // 15: cryptovotepb.CryptoVoteService.DeleteAllCryptoVoteByFilter:output_type -> cryptovotepb.TotalChangesRes
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cryptovotepb_go_grpc_cryptovote_proto_init() }
func file_cryptovotepb_go_grpc_cryptovote_proto_init() {
	if File_cryptovotepb_go_grpc_cryptovote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCryptoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCryptoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCryptoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalChangesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCryptoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cryptovotepb_go_grpc_cryptovote_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cryptovotepb_go_grpc_cryptovote_proto_goTypes,
		DependencyIndexes: file_cryptovotepb_go_grpc_cryptovote_proto_depIdxs,
		MessageInfos:      file_cryptovotepb_go_grpc_cryptovote_proto_msgTypes,
	}.Build()
	File_cryptovotepb_go_grpc_cryptovote_proto = out.File
	file_cryptovotepb_go_grpc_cryptovote_proto_rawDesc = nil
	file_cryptovotepb_go_grpc_cryptovote_proto_goTypes = nil
	file_cryptovotepb_go_grpc_cryptovote_proto_depIdxs = nil
}
